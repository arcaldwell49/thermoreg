dp = 20
6.11 * 10^((7.5 * dp)/(237.3 + dp))
usethis::use_git_ignore()
usethis::use_git_ignore(".DS_STORE")
xml2::xml_text(xml2::read_xml(paste0("<x>", str, "</x>")))
unescape_xml <- function(str){
xml2::xml_text(xml2::read_xml(paste0("<x>", str, "</x>")))
}
unescape_xml("3 &lt; x &amp; x &gt; 9")
test = unescape_xml("3 &lt; x &amp; x &gt; 9")
test = "32*degree"
test
bquote(test)
test = "\u2265 80"
print(test)
test == "\u2265 80"
test = "\u00B0"
test
test = "\u00B0 C"
test
temp_convert = function(t = NULL,
to = "celsius",
from = "fahrenheit"){
if(to == "celsius"){
if(from == "fahrenheit"){
t2 = 5/9*(t-32)
} else if(from == "kelvin"){
t2 = t2 - 273
} else{
t2 = t
}
}
if(to == "fahrenheit"){
if(from == "celsius"){
t2 = 9/5*(t) + 32
} else if(from == "kelvin"){
t2 = 9/5*(t-273)+32
} else{
t2 = t
}
}
if(to == "kelvin"){
if(from == "fahrenheit"){
t2 = 5/9*(t-32)+273
} else if(from == "celsius"){
t2 = t2 + 273
} else{
t2 = t
}
}
structure(list(est = t2,
meas = "Temperature",
units = to))
}
print.thermoreg_meas <- function(x,...){
# est, meas, units
est = x$est
meas = x$meas
units = x$units
cat(meas,  sep = "")
cat("\n")
cat(est, units)
}
temp_convert(70)
test = temp_convert(70)
est = test$est
units = test$units
cat(meas,  sep = "")
cat("\n")
cat(est, units)
meas = test$meas
cat(meas,  sep = "")
cat("\n")
cat(est, units)
?signif
signif(21.111111)
signif(.000000001)
signif(.001)
signif(1.8192312)
signif(1.8192312,3
)
signif(1.8192312,4)
signif(18.192312,4)
signif(181.92312,4)
library(thermoreg)
rm()
library(thermoreg)
library(thermoreg)
library(thermoreg)
library(thermoreg)
temp_convert(70)
0.750062*.999
1/.999
.999999838*0.7493119
?tolower
1/760
NULL/100
class(test)
test = temp_convert(70)
test
class(test)
tdp = NULL
class(tdp)
test$est
cat(NULL)
cat("test")
?`%in%`
tdp = 37
tdp %in% c(1,2,3)
to = "inHg"
to %in% c("torr","mmHg","psi","hPa")
!(to %in% c("torr","mmHg","psi","hPa"))
1/760
1/51.7149
1/0.750062
library(thermoreg)
library(thermoreg)
?press_convert
library(thermoreg)
?press_convert
test
temp_convert(20)
library(thermoreg)
temp_convert(20)
library(thermoreg)
temp_convert(20)
library(thermoreg)
?convert_temp
?temp_convert
temp_convert(70)
press_convert(20)
library(thermoreg)
?press_convert
library(thermoreg)
?temp_init
?tolower
install.packages("pkgdown")
pkgdown::build_site()
usethis::use_gpl_license()
usethis::use_code_of_conduct("arcaldwell49@gmail.com")
pkgdown:::build_site_external()
pkgdown:::build_site_external()
usethis::use_testthat()
usethis::use_test("temps")
library(thermoreg)
t1 = temp_init(20)
t1
expect_equal(t1$est,20)
library(testthat)
expect_equal(t1$est,20)
t1 = temp_init(20)
expect_equal(t1$est,20)
expect_equal(class(t1),"thermoreg_meas")
expect_equal(t1$meas, "tdb")
t1 = temp_init(20)
expect_equal(t1$est,20)
expect_equal(class(t1),"thermoreg_meas")
expect_equal(t1$meas, "Temperature")
expect_equal(t1$units, "celsius")
expect_equal(t1$type, "tdb")
test_that("temp init works", {
t1 = temp_init(20)
expect_equal(t1$est,20)
expect_equal(class(t1),"thermoreg_meas")
expect_equal(t1$meas, "Temperature")
expect_equal(t1$units, "celsius")
expect_equal(t1$type, "tdb")
})
t2 = temp_init(76,
type = "wbgt",
units = "f")
expect_equal(t2$est,20)
expect_equal(class(t2),"thermoreg_meas")
expect_equal(t2$meas, "Temperature")
expect_equal(t2$units, "fahrenheit")
expect_equal(t2$type, "tdb")
t2 = temp_init(76,
type = "wbgt",
units = "f")
expect_equal(t2$est,76)
expect_equal(class(t2),"thermoreg_meas")
expect_equal(t2$meas, "Temperature")
expect_equal(t2$units, "fahrenheit")
t2 = temp_init(1,
type = "twb",
units = "k")
expect_equal(t2$est,1)
expect_equal(class(t2),"thermoreg_meas")
expect_equal(t2$meas, "Temperature")
expect_equal(t2$units, "kelvin")
expect_equal(t2$type, "twb")
expect_error(emp_init(1,
type = "twb",
units = "kk"))
expect_error(temp_init(1,
type = "twb",
units = "kk"))
expect_error(temp_init(1,
type = "ww",
units = "k"))
t1 = temp_init(20,
units = "c")
expect_equal(t1$est,20)
expect_equal(class(t1),"thermoreg_meas")
expect_equal(t1$meas, "Temperature")
expect_equal(t1$units, "celsius")
expect_equal(t1$type, "tdb")
?temp_convert
tc1 = temp_convert(20,
to = "f",
from = "c")
tc1
print(t1)
tc1_1 = temp_convert(20,
to = "f",
from = "c")
tc1_2 = temp_convert(t1$est,
to = "fahrenheit",
from = "celsius")
tc1_2
expect_equal(tc1_1, tc1_2)
tc2_1 = temp_convert(1,
to = "c",
from = "k")
tc2_2 = temp_convert(t2$est,
to = "celsius",
from = "kelvin")
t2$est
to = "celsius"
t2$est
from = "kelvin"
x = 1
if(class(x) == "thermoreg_meas"){
x = x$est
}
to = tolower(to)
from = tolower(from)
if(!(to %in% c("kelvin", "celsius", "fahrenheit", "c", "f","k"))){
stop("to: Not a supported measure of temperature")
}
if(!(from %in% c("kelvin", "celsius", "fahrenheit", "c", "f","k"))){
stop("from: Not a supported measure of temperature")
}
t = x
if(to %in% c("c","f","k")){
if(to == "c"){
to = "celsius"
} else if ( to == "f"){
to = "fahrenheit"
} else if ( to == "k"){
to == "kelvin"
}
}
if(from %in% c("c","f","k")){
if(from == "c"){
from = "celsius"
} else if ( from == "f"){
from = "fahrenheit"
} else if ( from == "k"){
from == "kelvin"
}
}
library(thermoreg)
tc2_1 = temp_convert(1,
to = "c",
from = "k")
tc2_2 = temp_convert(t2$est,
to = "celsius",
from = "kelvin")
expect_equal(tc2_1, tc2_2)
library(thermoreg)
library(thermoreg)
t3
t3 = temp_init(76,
type = "wbgt",
units = "f")
t3
tc3_1 = temp_convert(76,
to = "c",
from = "f")
tc3_1
temp_convert(t3$est,
to = "celsius",
from = "kelvin")
tc3_1 = temp_convert(76,
to = "c",
from = "f")
tc3_2 = temp_convert(t3$est,
to = "celsius",
from = "f")
expect_equal(tc3_1, tc3_2)
t1 = temp_convert(30,
to = "c",
from = "f")
t1
expect_equal(30,
temp_convert(t1$est, to = "f",
from = "c"))
t1 = temp_convert(30,
to = "c",
from = "f")
expect_equal(30,
temp_convert(t1$est, to = "f",
from = "c")$est)
temp_convert(t1$est,
to = "c",
from = "k")
temp_convert(t2$est, to = "f",
from = "k")$est
t1
expect_equal(30,
temp_convert(t2$est, to = "f",
from = "c")$est)
temp_convert(t2$est, to = "f",
from = "c")$est
temp_convert(t2$est, to = "f",
from = "k")$est
t1$est
temp_convert(t1$est,
to = "c",
from = "k")
temp_convert(t1$est,
to = "k",
from = "c")
x = t1$est
x
if(class(x) == "thermoreg_meas"){
x = x$est
}
to = tolower(to)
from = tolower(from)
if(!(to %in% c("kelvin", "celsius", "fahrenheit", "c", "f","k"))){
stop("to: Not a supported measure of temperature")
}
if(!(from %in% c("kelvin", "celsius", "fahrenheit", "c", "f","k"))){
stop("from: Not a supported measure of temperature")
}
t = x
if(to %in% c("c","f","k")){
if(to == "c"){
to = "celsius"
} else if ( to == "f"){
to = "fahrenheit"
} else if ( to == "k"){
to == "kelvin"
}
}
if(from %in% c("c","f","k")){
if(from == "c"){
from = "celsius"
} else if ( from == "f"){
from = "fahrenheit"
} else if ( from == "k"){
from == "kelvin"
}
}
if(to == "celsius"){
if(from == "fahrenheit"){
t2 = 5/9*(t-32)
} else if(from == "kelvin"){
t2 = t - 273
} else{
t2 = t
}
}
5/9*(t-32)+273
library(thermoreg)
t1
t2 = temp_convert(t1$est,
to = "k",
from = "c")
t2
t2
temp_convert(t2$est, to = "f",
from = "k")$est
t2$est
temp_convert(t2$est, to = "f",
from = "k")
t1$est
temp_convert(t1$est,
to = "k",
from = "c")
t2 = temp_convert(t1$est,
to = "k",
from = "c")
t2
t2$est
library(thermoreg)
t1 = temp_convert(30,
to = "c",
from = "f")
expect_equal(30,
temp_convert(t1$est, to = "f",
from = "c")$est)
t2 = temp_convert(t1$est,
to = "k",
from = "c")
t2
t2 = temp_convert(t1$est,
to = "k",
from = "c")
t1
t1$est
x = t1$est
class(x)
if(class(x) == "thermoreg_meas"){
x = x$est
}
x = as.numeric(x)
to = tolower(to)
from = tolower(from)
x
to = "k"
from = "c"
if(!(to %in% c("kelvin", "celsius", "fahrenheit", "c", "f","k"))){
stop("to: Not a supported measure of temperature")
}
if(!(from %in% c("kelvin", "celsius", "fahrenheit", "c", "f","k"))){
stop("from: Not a supported measure of temperature")
}
t = x
t
if(to %in% c("c","f","k")){
if(to == "c"){
to = "celsius"
} else if ( to == "f"){
to = "fahrenheit"
} else if ( to == "k"){
to == "kelvin"
}
}
if(from %in% c("c","f","k")){
if(from == "c"){
from = "celsius"
} else if ( from == "f"){
from = "fahrenheit"
} else if ( from == "k"){
from == "kelvin"
}
}
to
if(to %in% c("c","f","k")){
if(to == "c"){
to = "celsius"
} else if ( to == "f"){
to = "fahrenheit"
} else if ( to == "k"){
to == "kelvin"
}
}
to %in% c("c","f","k")
library(thermoreg)
t2 = temp_convert(t1$est,
to = "k",
from = "c")
t2
expect_equal(30,
temp_convert(t2$est, to = "f",
from = "k")$est)
temp_convert(t2$est, to = "f",
from = "k")$est
usethis::use_coverage()
usethis::use_github_action_check_release()
pkgdown:::build_site_external()
pkgdown:::build_site_external()
usethis::use_coverage()
